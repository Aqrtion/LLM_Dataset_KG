{
    "title_author_abstract_introduction": "VoxCeleb: a large-scale speaker identiﬁcation dataset\nArsha Nagrani†, Joon Son Chung†, Andrew Zisserman\nVisual Geometry Group, Department of Engineering Science, University of Oxford, UK {arsha,joon,az}@robots.ox.ac.uk\nAbstract\nMost existing datasets for speaker identiﬁcation contain samples obtained under quite constrained conditions, and are usually hand-annotated, hence limited in size. The goal of this paper is to generate a large scale text-independent speaker identiﬁcation dataset collected ‘in the wild’.\nWe make two contributions. First, we propose a fully automated pipeline based on computer vision techniques to create the dataset from open-source media. Our pipeline involves obtaining videos from YouTube; performing active speaker veriﬁ- cation using a two-stream synchronization Convolutional Neural Network (CNN), and conﬁrming the identity of the speaker using CNN based facial recognition. We use this pipeline to curate VoxCeleb which contains hundreds of thousands of ‘real world’ utterances for over 1,000 celebrities.\nOur second contribution is to apply and compare various state of the art speaker identiﬁcation techniques on our dataset to establish baseline performance. We show that a CNN based architecture obtains the best performance for both identiﬁcation and veriﬁcation. Index Terms: large-scale, dataset, convolutional neural network\nspeaker identiﬁcation, speaker veriﬁcation,\n1. Introduction\nSpeaker recognition under noisy and unconstrained conditions is an extremely challenging topic. Applications of speaker recognition are many and varied, ranging from authentication in high-security systems and forensic tests, to searching for persons in large corpora of speech data. All such tasks require high speaker recognition performance under ‘real world’ conditions. This is an extremely difﬁcult task due to both extrinsic and intrinsic variations; extrinsic variations include background chatter and music, laughter, reverberation, channel and microphone effects; while intrinsic variations are factors inherent to the speaker themself such as age, accent, emotion, intonation and manner of speaking, amongst others [1].\nDeep Convolutional Neural Networks (CNNs) have given rise to substantial improvements in speech recognition, computer vision and related ﬁelds due to their ability to deal with real world, noisy datasets without the need for handcrafted features [2, 3, 4]. One of the most important ingredients for the success of such methods, however, is the availability of large training datasets.\nUnfortunately, large-scale public datasets in the ﬁeld of speaker identiﬁcation with unconstrained speech samples are lacking. While large-scale evaluations are held regularly by the National Institute of Standards in Technology (NIST), these datasets are not freely available to the research community. The only freely available dataset curated from multimedia is the\n†These authors contributed equally to this work.\nSpeakers in the Wild (SITW) dataset [5], which contains speech samples of 299 speakers across unconstrained or ‘wild’ conditions. This is a valuable dataset, but to create it the speech samples have been hand-annotated. Scaling it further, for example to thousands of speakers across tens of thousands of utterances, would require the use of a service such as Amazon Mechanical Turk (AMT). In the computer vision community AMT like services have been used to produce very large-scale datasets, such as ImageNet [6].\nThis paper has two goals. The ﬁrst is to propose a fully automated and scalable pipeline for creating a large-scale ‘real world’ speaker identiﬁcation dataset. By using visual active speaker identiﬁcation and face veriﬁcation, our method circumvents the need for human annotation completely. We use this method to curate VoxCeleb, a large-scale dataset with hundreds of utterances for over a thousand speakers. The second goal is to investigate different architectures and techniques for trainingdeepCNNsonspectrogramsextracteddirectlyfromthe raw audio ﬁles with very little pre-processing, and compare our results on this new dataset with more traditional state-of-the-art methods.\nVoxCeleb can be used for both speaker identiﬁcation and veriﬁcation. Speaker identiﬁcation involves determining which speaker has produced a given utterance, if this is performed for a closed set of speakers then the task is similar to that of multiclass classiﬁcation. Speaker veriﬁcation on the other hand involves determining whether there is a match between a given utterance and a target model. We provide baselines for both tasks.\nThe dataset can be downloaded from http://www.\nrobots.ox.ac.uk/˜vgg/data/voxceleb.",
    "data_related_paragraphs": [
        "For a long time, speaker identiﬁcation was the domain of Gaussian Mixture Models (GMMs) trained on low dimensional feature vectors [7, 8]. The state of the art in more recent times involves both the use of joint factor analysis (JFA) based methods which model speaker and channel subspaces separately [9], and i-vectors which attempt to model both subspaces into a single compact, low-dimensional space [10]. Although state of the art in speaker recognition tasks, these methods all have one thing in common – they rely on a low dimensional representation of the audio input, such as Mel Frequency Cepstrum Coefﬁcients (MFCCs). However, not only does the performance of MFCCs degrade rapidly in real world noise [11, 12], but by focusing only on the overall spectral envelope of short frames, MFCCs may belacking inspeaker-discriminating features (such aspitch information). This has led to a very recent shift from handcrafted features to the domain of deep CNNs which can be applied tohigherdimensional inputs [13, 14] and forspeaker identiﬁcation [15]. Essential to this task however, is a large dataset obtained under real world conditions.",
        "Many existing datasets are obtained under controlled conditions, for example: forensic data intercepted by police ofﬁcials [16], data from telephone calls [17], speech recorded live in high quality environments such as acoustic laboratories [18, 19], or speech recorded from mobile devices [20, 21]. [22] consists of more natural speech but has been manually processed to remove extraneous noises and crosstalk. All the above datasets are also obtained from single-speaker environments, and are free from audience noise and overlapping speech.",
        "Datasets obtained from multi-speaker environments include those from recorded meeting data [23, 24], or from audio broadcasts [25]. These datasets usually contain audio samples under less controlled conditions. Some datasets contain artiﬁcial degradation in an attempt to mimic real world noise, such as those developed using the TIMIT dataset [19]: NTIMIT, (transmitting TIMIT recordings through a telephone handset) and CTIMIT, (passing TIMIT ﬁles through cellular telephone circuits).",
        "Table 1 summarises existing speaker identiﬁcation datasets. Besides lacking real world conditions, to the best of our knowledge, mostofthesedatasetshavebeencollectedwithgreatmanual effort, other than [25] which was obtained by mapping subtitles and transcripts to broadcast data.",
        "Table 1: Comparison of existing speaker identiﬁcation datasets. Cond.: Acoustic conditions; POI: Person of Interest; Utter.: Approximate number of utterances. †And its derivatives. ‡Number of telephone calls. ∗ varies by year.",
        "3. Dataset Description VoxCeleb contains over 100,000 utterances for 1,251 celebrities, extracted from videos uploaded to YouTube. The dataset is gender balanced, with 55% of the speakers male. The speakers span a wide range of different ethnicities, accents, professions and ages. The nationality and gender of each speaker (obtained from Wikipedia) is also provided.",
        "Videos included in the dataset are shot in a large number of challenging multi-speaker acoustic environments. These include red carpet, outdoor stadium, quiet studio interviews, speeches given to large audiences, excerpts from professionally shot multimedia, and videos shot on hand-held devices. Crucially, all are degraded with real world noise, consisting of background chatter, laughter, overlapping speech, room acoustics, and there is a range in the quality of recording equipment and channel noise. Unlike the SITW dataset, both audio and video for each speaker is released. Table 2 gives the dataset statistics.",
        "4. Dataset Collection Pipeline",
        "This section describes our multi-stage approach for collecting a large speaker recognition dataset, starting from YouTube videos. Using this fully automated pipeline, we have obtained hundreds of utterances for over a thousand different Persons of",
        "Table 2: VoxCeleb dataset statistics. Where there are three entries in a ﬁeld, numbers refer to the maximum / average / minimum.",
        "Interest (POIs). The pipeline is summarised in Figure 1 left, and key stages are discussed in the following paragraphs: Stage 1. Candidate list of POIs. The ﬁrst stage is to obtain a list of POIs. We start from the list of people that appear in the VGG Face dataset [30] , which is based on an intersection of the most searched names in the Freebase knowledge graph, and the Internet Movie Data Base (IMDB). This list contains 2,622 identities, ranging from actors and sportspeople to entrepreneurs, of which approximately half are male and the other half female. Stage 2. Downloading videos from YouTube. The top 50 videos for each of the 2,622 POIs are automatically downloaded using YouTube search. The word ‘interview’ is appended to the name of the POI in search queries to increase the likelihood that the videos contain an instance of the POI speaking, and to ﬁlter out sports or music videos. No other ﬁltering is done at this stage. Stage 3. Face tracking. The HOG-based face detector [32] is used to detect the faces in every frame of the video. Facial landmark positions are detected for each face detection using the regression tree based method of [33]. The shot boundaries aredetectedbycomparingcolourhistogramsacrossconsecutive frames. Within each detected shot, face detections are grouped together into face tracks using a position-based tracker. This stage is closely related to the tracking pipeline of [34, 35], but optimised to reduce run-time given the very large number of videos to process. Stage 4. Active speaker veriﬁcation. The goal of this stage is to determine the audio-video synchronisation between mouth motion and speech in a video in order to determine which (if any) visible face is the speaker. This is done by using ‘SyncNet’, a two-stream CNN described in [36] which estimates the correlation between the audio track and the mouth motion of the video. This method is able to reject the clips that contain dubbing or voice-over. Stage 5. Face veriﬁcation. Active speaker face tracks are then classiﬁed into whether they are of the POI or not using the VGG Face CNN. This classiﬁcation network is based on the VGG-16 CNN [3] trained on the VGG Face dataset (which is a ﬁltered collection of Google Image Search results for the POI name). Veriﬁcation is done by directly using this classiﬁcation score with a high threshold. Discussion. In order to ensure that our system is extremely conﬁdent that a person is speaking (Stage 4), and that they have been correctly identiﬁed (Stage 5) without any manual interference, we set very conservative thresholds in order to minimise the number of false positives. Precision-recall curves for both tasks on their respective benchmark datasets [30, 31] are shown in Figure 1 right, and the values at the operating point are given in Table 3. Employing these thresholds ensures that although we discard a lot of the downloaded videos, we can be reasonably certain that the dataset has few labelling errors. This ensures a completely automatic pipeline that can be scaled up to any number of speakers and utterances (if available) as",
        "Figure 1: Left: Data processing pipeline; Right: Precision-recall curves for the active speaker veriﬁcation (using a 25-frame window) and the face veriﬁcation steps, tested on standard benchmark datasets [30, 31]. Operating points are shown in circles.",
        "Dataset [31] [30]",
        "Our aim is to move from techniques that require traditional hand-crafted features, to a CNN architecture that can choose the features required for the task of speaker recognition. This allows us to minimise the pre-processing of the audio data and hence avoid losing valuable information in the process. Input features. All audio is ﬁrst converted to single-channel, 16-bit streams at a 16kHz sampling rate for consistency. Spectrograms are then generated in a sliding window fashion using a hamming window of width 25ms and step 10ms. This gives spectrograms of size 512 x 300 for 3 seconds of speech. Mean and variance normalisation is performed on every frequency bin of the spectrum. This normalisation is crucial, leading to an almost 10% increase in classiﬁcation accuracy, as shown in Table 7. No other speech-speciﬁc preprocessing (e.g. silence removal, voice activity detection, or removal of unvoiced speech) is used. These short time magnitude spectrograms are then used as input to the CNN. Architecture. Since speaker identiﬁcation under a closed set can be treated as a multiple-class classiﬁcation problem, we baseourarchitectureontheVGG-M[37]CNN,knownforgood classiﬁcation performance on image data, with modiﬁcations to adapt to the spectrogram input. The fully connected fc6 layer of dimension 9 × 8 (support in both dimensions) is replaced by two layers – a fully connected layer of 9×1 (support in the frequency domain) and an average pool layer with support 1 × n, where n depends on the length of the input speech segment (for example for a 3 second segment, n = 8). This makes the network invariant to temporal position but not frequency, and at the same time keeps the output dimensions the same as those of the original fully connected layer. This also reduces the number of parameters from 319M in VGG-M to 67M in our network, which helps avoid overﬁtting. The complete CNN architecture is speciﬁed in Table 4. Identiﬁcation. Since identiﬁcation is treated as a simple classiﬁcation task, the output of the last layer is fed into a 1,251-way",
        "Data size 254×148 126×73 62×36 30×17 30×17 30×17 30×17 9×8 1×8 1×1 1×1 1×1",
        "Table 4: CNN architecture. The data size up to fc6 is for a 3- secondinput, butthenetworkisabletoacceptinputsofvariable lengths.",
        "Implementation details and training. Our implementation is based on the deep learning toolbox MatConvNet [39] and trained on a NVIDIA TITAN X GPU. The network is trained using batch normalisation [40] and all hyper-parameters (e.g. weight decay, learning rates) use the default values provided with the toolbox. To reduce overﬁtting, we augment the data by taking random 3-second crops in the time domain during training. Using a ﬁxed input length is also more efﬁcient. For veriﬁcation, the network is ﬁrst trained for classiﬁcation (excluding the test POIs for the veriﬁcation task, see Section 6), and then",
        "Download videosFace detectionFace trackingAudio feature extractionActive speaker verificationFace verificationVoxCelebdatabaseElon Musk0.50.60.70.80.91Recall0.50.60.70.80.91PrecisionActive speaker verificationFace verification\fall ﬁlter weights are frozen except for the modiﬁed last layer and the Siamese network trained with contrastive loss. Choosing good pairs for training is very important in metric learning. We randomly select half of the negative examples, and the other half using Hard Negative Mining, where we only sample from the hardest 10% of all negatives.",
        "Two key performance metrics are used to evaluate system performance for the veriﬁcation task. The metrics are similar to those used by existing datasets and challenges, such as NIST SRE12 [29] and SITW [5]. The primary metric is based on the cost function Cdet",
        "I-vectors/PLDA. Gender independent i-vector extractors [10] are trained on the VoxCeleb dataset to produce 400- dimensional i-vectors. Probabilistic LDA (PLDA) [41] is then used to reduce the dimension of the i-vectors to 200. Inference. For identiﬁcation, a one-vs-rest binary SVM classiﬁer is trained for each speaker m (m ∈ 1...K). All feature inputs to the SVM are L2 normalised and a held out validation set is used to determine the C parameter (determines trade off between maximising the margin and penalising training errors). Classiﬁcation during test time is done by choosing the speaker corresponding to the highest SVM score. The PLDA scoring function [41] is used for veriﬁcation.",
        "For identiﬁcation we achieve an 80.5% top-1 classiﬁcation accuracy over 1,251 different classes, almost 20% higher than traditional state of the art baselines. The CNN architecture uses the average pooling layer for variable length test data. We also compare to two variants: ‘CNN-fc-3s’, this architecture has a fully connected fc6 layer, and divides the test data into 3s segments and averages the scores. As is evident there is a considerable drop in performance compared to the average pooling original – partly due to the increased number of parameters that mustbelearnt; ‘CNN-fc-3snovar.norm.’, thisistheCNN-fc-3s architecture without the variance normalization pre-processing of the input (the input is still mean normalized). The difference in performance between the two shows the importance of variance normalization for this data.",
        "GMM-UBM. The GMM-UBM system uses MFCCs of dimension 13 as input. Cepstral mean and variance normalisation (CMVN) is applied on the features. Using the conventional GMM-UBM framework, a single speaker-independent universal background model (UBM) of 1024 mixture components is trained for 10 iterations from the training data.",
        "We provide a fully automated and scalable pipeline for audio data collection and use it to create a large-scale speaker identiﬁcation dataset called VoxCeleb, with 1,251 speakers and over 100,000 utterances. In order to establish benchmark performance, we develop a novel CNN architecture with the ability to deal with variable length audio inputs, which outperforms traditional state-of-the-art methods for both speaker identiﬁcation and veriﬁcation on this dataset.",
        "[5] M. McLaren, L. Ferrer, D. Castan, and A. Lawson, “The speakers in the wild (SITW) speaker recognition database,” INTERSPEECH, vol. 2016, 2016.",
        "[16] D. van der Vloed, J. Bouten, and D. A. van Leeuwen, “NFIFRITS: a forensic speaker recognition database and some ﬁrst experiments,” in The Speaker and Language Recognition Workshop, 2014.",
        "[17] J. Hennebert, H. Melin, D. Petrovska, and D. Genoud, “POLYCOST: a telephone-speech database for speaker recognition,” Speech communication, vol. 31, no. 2, pp. 265–270, 2000.",
        "[18] J. B. Millar, J. P. Vonwiller, J. M. Harrington, and P. J. Dermody, “The Australian national database of spoken language,” in Proceedings of the IEEE International Conference on Acoustics, Speech and Signal Processing, vol. 1, pp. I–97, IEEE, 1994.",
        "[20] C. McCool and S. Marcel, “Mobio database for the ICPR 2010",
        "[21] R. Woo, A. Park, and T. J. Hazen, “The MIT Mobile Device Speaker Veriﬁcation Corpus: Data collection and preliminary experiments,” The Speaker and Language Recognition Workshop, 2006.",
        "[22] G. Morrison, C. Zhang, E. Enzinger, F. Ochoa, D. Bleach, M. Johnson, B. Folkes, S. De Souza, N. Cummins, and D. Chow, “Forensicdatabaseofvoicerecordingsof500+AustralianEnglish speakers,” URL: http://databases.forensic-voice-comparison.net, 2015.",
        "[26] L. Feng and L. K. Hansen, “A new database for speaker recogni-",
        "[28] W. M. Fisher, G. R. Doddington, and K. M. Goudie-Marshall, “The DARPA speech recognition research database: speciﬁcations and status,” in Proc. DARPA Workshop on speech recognition, pp. 93–99, 1986."
    ]
}