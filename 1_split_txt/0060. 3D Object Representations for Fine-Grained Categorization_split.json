{
    "title_author_abstract_introduction": "2013 IEEE International Conference on Computer Vision Workshops 2013 IEEE International Conference on Computer Vision Workshops 2013 IEEE International Conference on Computer Vision Workshops\n3D Object Representations for Fine-Grained Categorization\nJonathan Krause1, Michael Stark1,2, Jia Deng1, and Li Fei-Fei1\n1Computer Science Department, Stanford University 2Max Planck Institute for Informatics\nAbstract\nWhile 3D object representations are being revived in the context of multi-view object class detection and scene understanding, they have not yet attained wide-spread use in ﬁne-grained categorization. State-of-the-art approaches achieve remarkable performance when training data is plentiful, but they are typically tied to ﬂat, 2D representations that model objects as a collection of unconnected views, limiting their ability to generalize across viewpoints. In this paper, we therefore lift two state-of-the-art 2D object representations to 3D, on the level of both local feature appearance and location. In extensive experiments on existing and newly proposed datasets, we show our 3D object representations outperform their state-of-the-art 2D counterparts for ﬁne-grained categorization and demonstrate their efﬁcacy for estimating 3D geometry from images via ultrawide baseline matching and 3D reconstruction.\n1. Introduction\nThree-dimensional representations of objects and scenes have been deemed the holy grail since the early days of computer vision due to their potential to provide more faithful and compact depictions of the visual world than viewbased representations. Recently, 3D methods have been revived in the context of multi-view object class detection [26, 18, 24] and scene-understanding [14, 11]. For these applications, 3D representations exhibit favorable performance due to their ability to link object parts across multiple views. Surprisingly, these strengths have hardly been exploited in ﬁne-grained recognition, one of the most active areas in computer vision today. There, most state-of-theart approaches still rely entirely on “ﬂat” image representations that model both the appearance of individual features and their location in the 2D image plane. The former typically takes the form of densely sampled local appearance features such as SIFT [20], often followed by a nonlinear coding step [30]. For the latter, various spatial pooling strategies have proven successful, ranging from global\nFigure 1: Corresponding patches may have vastly different image coordinates and appearances. Our 3D representations make their positions and appearances directly comparable.\nhistograms [22] over spatial pyramids [17] to local search regions [8]. While these approaches have delivered remarkable performance in ﬁne-grained categorization tasks that are difﬁcult even for humans [9, 29, 36], they are still limited by the need to observe a relatively dense viewpoint sampling for each category in order to learn reliable models. In this paper, we therefore take a different route, and follow the intuition that the distinctive features of a ﬁnegrained category, such as the characteristic grille of the car in Fig. 1, are most naturally represented in 3D object space, not in the 2D image plane – this comprises both the appearance of the features (appearance varies with viewpoint, so a viewpoint-independent appearance representation is desired) and their location with respect to an object (the grille appears in a speciﬁc region of the 3D car surface, not necessarily in a particular image position). We establish the notion of 3D object space by ﬁrst obtaining an estimate of the3Dgeometryofanobject, thenrepresentingfeaturesrelative to this geometry. Speciﬁcally, the geometry estimate allows rectiﬁcation of an image patch with respect to the estimated surface normal at its center point and characterizes its location as coordinates on the 3D object surface.\nThe basis of our implementation is given by two state-ofthe-art 2D object representations. The ﬁrst, spatial pyramid matching [17], speciﬁcally using locality constrained linear coding (LLC [30]), has attained wide-spread use due to\n978-0-7695-5161-6/13 $31.00 © 2013 IEEE 978-1-4799-3022-7/13 $31.00 © 2013 IEEE 978-1-4799-3022-7/13 $31.00 © 2013 IEEE DOI 10.1109/ICCVW.2013.77 DOI 10.1109/ICCVW.2013.77 DOI 10.1109/ICCVW.2013.77\nAuthorized licensed use limited to: SUN YAT-SEN UNIVERSITY. Downloaded on March 14,2025 at 06:37:32 UTC from IEEE Xplore.  Restrictions apply.\nits consistently high performance on various image categorization benchmarks, combining local feature coding with a spatial pyramid representation. The second representation, BubbleBank (BB [8]), has recently been shown to outperform prior work in ﬁne-grained categorization. It relies on extracting discriminative patches from training images, convolving them in local regions within a test image, and using the responses as features.\nOur paper makes the following contributions: First, we lift two state-of-the-art 2D object representations to 3D w.r.t. both the appearance and location of local features. We demonstrate the resulting 3D object representations outperform both their respective 2D counterparts and state-ofthe-art baselines in ﬁne-grained categorization. Second, we introduce a new dataset of 207 ﬁne-grained categories that will be made publicly available upon publication, separated into two subsets: a small-scale, but ultra-ﬁne-grained set of 10 BMW models, and a large-scale set of 197 car types. Third, we demonstrate the usefulness of our 3D object representation for estimating 3D geometry from test images in the form of ultra-wide baseline matching [37]. Fourth, we provide ﬁrst experimental results on the challenging task of 3D reconstruction of ﬁne-grained categories, which, to our knowledge, has not been attempted in the literature before.",
    "data_related_paragraphs": [
        "A remarkable exception to this trend is the recent work byFarrelletal.[9], whichimplementslocalappearancefeatures and spatial pooling relative to a volumetric 3D bird model. While our work is similar in spirit, it goes beyond [9] in several important directions. First, in contrast to [9], our work does not rely on extensive annotation of trainingdata. Instead, weleverageexisting3DCADmodels",
        "3D representations for recognition. We draw inspiration from approaches in multi-view object class recognition that leverage 3D representations to establish correspondences across different viewpoints [37, 24, 12, 25]. While these prior approaches establish correspondences on a ﬁxed, small set of object parts, our 3D variant of BB yields hundreds of correspondences on the level of individual local features, making them applicable to challenging tasks such as 3D reconstruction from a ﬁne-grained category (Sect. 5.3). Similar to prior works in multi-view detection, we leverage 3D CAD models to generate synthetic training data [18, 37, 32, 24].",
        "produce a single feature. The ﬁnal representation consists ofpoolingresponsesofalargebankofbubblesovertheirrespective search regions. In [8], bubbles were deﬁned manually via crowdsourcing, but also deliver state-of-the-art performance even when randomly sampled from training data, in a manner similar to [33].",
        "Synthetic training data. In line with recent work in multi-view recognition [18, 24], we leverage 3D CAD models as a cheap and reliable source of synthetic training data. Crucially, this gives precise 3D coordinates that we can use to anchor our appearance and location representation and is entirely free of human intervention (in contrast to approaches relying on part annotations [9, 36, 19]). In our experiments (Sect. 5), our 3D geometry classiﬁers are trained from 41 CAD models of cars (Fig. 2(a)), rendered at 36 azimuths, 4 elevations, and against 10 random background variations, for a total of 59,040 synthetic images.",
        "The goal of our 3D appearance representation is to ensure that a discriminative local feature is represented only once, as opposed to requiring multiple representations in different viewpoints. Making these connections across viewpoints is important in order to generalize to test cases that have been observed from viewpoints not present in the training data. We achieve this through an appearance representation that is (to an extent) viewpoint invariant, by transforming local image patches into a uniﬁed frame of reference prior to feature computation. Patch sampling. The basis of our 3D appearance representation is given by a dense sampling of image patches that we extract from a given training or test image. In contrast to existing 2D representations, we sample patches directly from the 3D surface of the object of interest relative to its estimated 3D geometry (Sect. 3.2). In particular, we precompute thousands of uniformly spaced patch locations on the surface of our CAD models by dart throwing [5]. Each patch location comes with an associated surface normal and upward direction, determining its 3D orientation, and a ﬂat, planar rectangle, determining its support region (Fig. 2(b)). For feature extraction, we project all patches visible from the estimated viewpoint into the image, resulting in a set of perspectively distorted quadrilaterals. Patch rectiﬁcation and descriptors. Prior to feature computation, we rectify the projected quadrilaterals to a common reference rectangle, effectively compensating for perspective projection. While this applies only to locally planar surfaces in theory, it typically results in correctly rectiﬁed patches also for curved surfaces, such as the car grille in Fig. 1 and the patches in Fig. 2(c). We densely sample RootSIFT [1, 20] descriptors on each rectiﬁed patch.",
        "4. Novel Fine-Grained Dataset",
        "In order to provide a suitable test bed for our 3D representations, we have collected a challenging, large-scale dataset of car models, to be made available upon publication. It consists of BMW-10, a small, ultra-ﬁne-grained set of 10 BMW sedans (512 images) hand-collected by the authors, plus car-197, a large set of 197 car models (16,185 images) covering sedans, SUVs, coupes, convertibles, pickups, hatchbacks, and station wagons. Since dataset collection proved non-trivial, we give the most important challenges and insights.",
        "Finding candidate images. Candidate images for each class were collected from Flickr, Google, and Bing. To reduce annotation cost and ensure diversity in the data, the candidate images for each class were deduplicated using the same perceptual hash algorithm [35], leaving a set of several thousand candidate images for each of the 197 target classes. These images were then put on Amazon Mechanical Turk (AMT) in order to determine whether they belong to their respective target classes.",
        "Training annotators. The main challenge in crowdsourcing the collection of a ﬁne-grained dataset is that workers are typically non-experts. To compensate, we implemented a qualiﬁcation task (a set of particularly hard examples of the actual annotation task) and provide a set of positive and negative example images for the car class a worker is annotating, drawing the negative examples from classes known a priori to be similar to the target class.",
        "training, Modeling annotator reliability. Even after workers differ in quality by large margins. To tackle this problem, we use the Get Another Label (GAL) system [15], which simultaneously estimates the probability a candidate image belongs to its target class and determines a quality level for each worker. Candidate images whose probability of belonging to the target class exceeds a speciﬁed threshold are then added to the set of images for that category. After obtaining images for each of the 197 target classes, we collect a bounding box for each image via AMT, using a quality-controlled system provided to us by the authors of [28]. Finally, an additional stage of deduplication is performed on the images when cropped to their bounding boxes. Fig. 3 shows example dataset images.",
        "categorization of cars on various datasets (Sect. 5.1), reporting superior performance of our 3D object representations (SPM-3D, BB-3D) in comparison to both their respective 2D counterparts (SPM, BB) and state-of-the-art baselines [7, 3, 27, 30, 8]. Second, we successfully estimate the change in camera pose between multiple views of the same object (ultra-wide baseline matching, Sect. 5.2). And third, we give ﬁrst promising results on reconstructing partial 3D models from ﬁne-grained category instances (Sect. 5.3).",
        "We commence our evaluation by comparing the performance of our 3D object representations, their respective 2D counterparts, and state-of-the-art baselines for the task of ﬁne-grained categorization. To that end, we consider three different datasets of varying granularity. i) We use the existing car-types dataset [27], consisting of 14 car classes from a variety of coarse categories (sedans, hatchbacks, sedans, SUVs, convertibles), to establish that our methods outper-",
        "ii) form the previous state-of-the-art in car classiﬁcation. We provide an in-depth analysis of our methods in comparison to their respective 2D counterparts on BMW-10, our ultra-ﬁne-grained set of 10 BMW sedans. iii) We demonstrate the ability of our methods to scale up to hundreds of ﬁne-grained classes on our large-scale dataset (see Sect. 4). i) Car-types. Tab. 1(a) gives classiﬁcation accuracy for our methods SPM-3D, BB-3D-G, and prior work. Curiously, the performance on this dataset seems to have almost saturated, with the weakest prior method (a simple HOG template) achieving 77.5% and the strongest (structDPM, a multi-class DPM [10]) achieving 93.5% accuracy. We believe this high level of performance to indicate a rather coarse granularity of this dataset, which is reinforced by the two strongest prior methods (PB(mvDPM), 85.3%, structDPM, 93.5%) being based on part-layout information rather than discriminative local features (such as SPM, 84.5%). In comparison, our method BB-3D-G (94.5%) outperforms the best reported prior result of structDPM (93.5%) by 1%. In addition, unlike structDPM, it scales effortlessly to largescale datasets such as car-197, since it does not rely on joint regularization across all classes. Comparing 3D to 2D, BB-3D-G outperforms BB (92.6%) by 1.9%, and SPM-3D (85.7%) beats SPM by 1.2%. ii) BMW-10. Tab. 1(b) gives the results for our ultraﬁne-grained dataset of 10 BMW sedans, focusing on different variants of our methods SPM-3D and BB-3D and their respective 2D counterparts, and adding KDES [3] to the state-of-the-art baselines. We make the following observations: ﬁrst, the general level of performance is significantly lower than for car-types (HOG achieves an accuracy of 28.3%, PB(mvDPM) 29.1%), which indicates that our dataset is signiﬁcantly more ﬁne-grained. Second, as a result, methods relying on discriminative local features rather than a global feature template (HOG) or part layout (PB(mvDPM)) perform much better (KDES 46.5%, SPM 52.8%, BB 58.7%). Third, our 3D object representations improve signiﬁcantly over their respective 2D counterparts: SPM-3D-L (58.7%) improves over SPM by 5.9% and BB3D-G (66.1%) improves over BB by 7.4%.",
        "In Tab. 1(b), we also investigate the impact of enriching the original set of training images by ﬂipped versions of eachimage, effectivelydoublingtheamountoftrainingdata and increasing the density with which different object viewpoints are represented. Performance improves signiﬁcantly",
        "Table 1: (a) Comparison to state-of-the-art on car-types [27]. (b) In-depth analysis on our BMW-10 dataset.",
        "for all methods, by 8.6% (SPM-3D-L), 9.9% (BB-3D-G), 10.6% (BB), and 13.3% (SPM). Notice that while the 2D methods beneﬁt more from adding training data, the relative ordering of results between different methods is consistent with BMW-10 without ﬂipping: SPM-3D-L (67.3%) outperforms SPM by 1.2%, and BB-3D-G (76.0%) outperforms BB by 6.7%. Fig. 5(a) visualizes the discriminative power of each of the 10k bubbles of BB-3D-G on BMW10 (ﬂipped). Each point is a 3D bubble location, with its (cid:2)10 j=1 |wi,j|5, where wi,j is the size and hue proportional to SVM weight on feature i for class j. This indicates that discriminative features are primarily at the front and back of cars, which is both correct and human-interpretable.",
        "Amount of training data. Fig. 4(b) plots classiﬁcation accuracy (y-axis) of the two best performing 2D and 3D methods of Tab. 1(b) versus the number of training images, which we vary from 1 to 16 in powers of two (we also add the results on all of BMW-10 and BMW-10 (ﬂipped) as the two right-most points for reference). For each experiment, we randomly sample training images and ﬁx them for both methods. We observe the 3D representation to outperform its 2D counterpart consistently for all numbers of training images. The difference is most pronounced for 16 training images (9.8%) and decreases for larger numbers (to 7.4% and 6.7%, respectively), indicating that the 3D representation can utilize training data more effectively.",
        "iii) Car-197. Tab. 2(top) gives the results for our largescale dataset of 197 ﬁne-grained car categories, again comparing SPM-3D-L and BB-3D-G to SPM and BB. Surprisingly, SPM performs remarkably well with the increased data (69.5%), beating our best 3D representation BB-3D-G (67.6%) by 1.9%. Similarly to on the car-types, BMW-10, and BMW-10 (ﬂipped) datasets, BB-3D-G outperforms the",
        "Summary. We conclude that lifting 2D object representations to 3D is in fact beneﬁcial for all except one case for both SPM and BB, leading to signiﬁcant improvements in classiﬁcation performance over state-of-the-art on existing (car-types) and ultra-ﬁne-grained (BMW-10) datasets.",
        "Methodology. We follow the protocol of [37] and perform ultra-wide baseline matching on 134 image pairs of the 3D Object Classes dataset [26]. We modify BB-3DL to ﬁnd putative correspondences for pairs of images as follows: for a given pair, each patch in the ﬁrst image deﬁnes a bubble in the second image, and is convolved with",
        "Results. Tab. 2 gives ultra-wide baseline matching results, where performance is measured as the fraction of fundamental matrices for which the Sampson error [13] w.r.t. ground truth correspondences falls under a threshold (20 pixels as in [37]). Rows of Tab. 2 correspond to different baselines (difference in azimuth angle between two views of the same object). The last two rows give averages over all baselines (Av.1, imputing zero accuracy for “-”), and over onlytheﬁrsttwobaselinesthatcanbedeliveredbyallmethods (Av.2). Columns of Tab. 2 compare two variants of our BB-3D-L, BB-3D-S (using only a single coarse category and viewpoint prediction) and BB-3D-M (using multiple), with comparable local feature-based methods, SIFT [20] and the multi-view local part detectors of [37]. Although we can not expect to compete with the full-blown 3D shape model of [37] and the multi-view incarnation of DPM [10], 3D2PM [24], that leverage global shape and have been explicitly designed and trained for viewpoint prediction on that dataset, we include their results as reference.",
        "Results. Fig. 5(c) depicts qualitative results for the reconstruction of a ﬁne-grained class of our BMW-10 dataset (2012 BMW ActiveHybrid 7 Sedan), rendered from different viewpoints. Please note that we have not applied any dense, pixelwise reﬁnement of the sparse reconstruction. The point density is due to the high number of inlier correspondences generated by BB-3D-L. Clearly, the reconstructionisincompleteandcontainsspuriouspoints, inparticular for textureless regions (e.g., the hood) – however, the local 3D pooling of BB-3D-L successfully bounds the degree to which correspondences can “drift away” on the 3D geometry. The resulting reconstruction has a sedan shape, and shows the characteristic grille, headlight, and rear light features of a BMW. We believe this result to be highly promising, opening a vast array of future research directions, such as high-ﬁdelity reconstruction from ﬁne-grained categories, or using the reconstructed model for recognition.",
        "Wehavedemonstratedthat3Dobjectrepresentationscan be beneﬁcial for ﬁne-grained categorization of rigid classes, speciﬁcally cars. By lifting two state-of-the-art 2D object representations to 3D (SPM and BB), we obtained stateof-the-art performance on both existing (car-types) and our new datasets (BMW-10, car-197). In addition, we leveraged our BB-3D-L representation for ultra-wide baseline matching, and showed ﬁrst promising results for the automatic reconstruction of 3D models from ﬁne-grained category instances."
    ]
}