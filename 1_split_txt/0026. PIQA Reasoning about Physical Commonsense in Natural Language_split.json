{
    "title_author_abstract_introduction": "PIQA: Reasoning about Physical Commonsense in Natural Language\nYonatan Bisk1,2,3,4\nRowan Zellers1,4 1Allen Institute for Artiﬁcial Intelligence\nRonan Le Bras1 2Microsoft Research AI\nJianfeng Gao2\nYejin Choi1,4\n3Carnegie Mellon University\n4Paul G. Allen School for Computer Science and Engineering, University of Washington http://yonatanbisk.com/piqa\nAbstract\nTo apply eyeshadow without a brush, should I use a cotton swab or a toothpick? Questions requiring this kind of physical commonsense pose a challenge to today’s natural language understanding systems. While recent pretrained models (such as BERT) have made progress on question answering over more abstract domains – such as news articles and encyclopedia entries, where text is plentiful – in more physical domains, text is inherently limited due to reporting bias. Can AI systems learn to reliably answer physical commonsense questions without experiencing the physical world? In this paper, we introduce the task of physical commonsense reasoning and a corresponding benchmark dataset Physical Interaction: Question Answering or PIQA . Though humans ﬁnd the dataset easy (95% accuracy), large pretrained models struggle (∼77%). We provide analysis about the dimensions of knowledge that existing models lack, which offers signiﬁcant opportunities for future research.\nIntroduction Before children learn language, they already start forming categories and concepts based on the physical properties of objects around them (Hespos and Spelke 2004). This model of the world grows richer as they learn to speak, but already captures physical commonsense knowledge about everyday objects: their physical properties, affordances, and how they can be manipulated. This knowledge is critical for day-to-day human life, including tasks such as problem solving (what can I use as a pillow when camping?) and expressing needs and desires (bring me a harder pillow). Likewise, we hypothesize that modeling physical commonsense knowledge is a major challenge on the road to true AIcompleteness, including robots that interact with the world and understand natural language.\nMuch of physical commonsense can be expressed in language, as the versatility of everyday objects and common concepts eludes other label schemes. However, due to issues of reporting bias, these commonsense properties - facts like ‘it is a bad idea to apply eyeshadow with a toothpick’ are rarely directly reported. Although much recent progress\nCopyright c(cid:13) 2020, Association for the Advancement of Artiﬁcial Intelligence (www.aaai.org). All rights reserved.\nFigure 1: PIQA : Given a physical goal expressed in natural language, like ‘to separate egg whites...,’ a model must choose the most sensible solution. Our dataset tests the ability of natural language understanding models to link text to a robust intuitive-physics model of the world. Here, humans easily pick answer a) because separating the egg requires pulling the yolk out, while machines are easily fooled.\nhas been made in Natural Language Processing through a shift towards large-scale pretrained representations from unlabeled text (Radford et al. 2018; Devlin et al. 2019; Liu et al. 2019), the bulk of the success of this paradigm has been on core abstract tasks and domains. State-of-theart models can reliably answer questions given an encyclopedia article (Rajpurkar et al. 2016) or recognize named entities (Tjong Kim Sang and De Meulder 2003), but it is not clear whether they can robustly answer questions that require physical commonsense knowledge.\nTo study this question and begin bridging the representational gap, we introduce Physical Interaction: Question Answering, or PIQA to evaluate language representations on their knowledge of physical commonsense. We focus on everyday situations with a preference for atypical solutions. Our dataset is inspired by instructables.com, whichprovidesuserswithinstructionsonhowtobuild,craft,\na.Squeezethe water bottle and press it against the yolk. Release, which creates suction and lifts the yolk.To separate egg whites from the yolkusing a water bottle, you should…b.Placethe water bottle and press it against the yolk. Keep pushing,which creates suction and lifts the yolk.???a!\na. Shape, Material, and Purpose\nb. Commonsense Convenience\n[Goal] Make an outdoor pillow [Sol1] Blow into a tin can and tie with rubber band [Sol2] Blow into a trash bag and tie with rubber band\n[Goal] To make a hard shelled taco, [Sol1] put seasoned beef, cheese, and lettuce onto the hard\nshell.\n[Sol2] put seasoned beef, cheese, and lettuce into the hard\nshell.\n(cid:56) (cid:52)\n(cid:56)\n(cid:52)\n[Goal] How do I ﬁnd something I lost on the carpet? [Sol1] Put a solid seal on the end of your vacuum and turn it\n(cid:56)\n[Sol2] Put a hair net on the end of your vacuum and turn it on. (cid:52)\n[Goal] How to make sure all the clocks in the house are set\naccurately?\n[Sol1] Get a solar clock for a reference and place it just outside a window that gets lots of sun. Use a system of call and response once a month, having one person stationed at the solar clock who yells out the correct time and have another person move to each of the indoor clocks to check if they are showing the right time. Adjust as necessary.\n[Sol2] Replace all wind-ups with digital clocks. That way, you set them once, and that’s it. Check the batteries once a year or if you notice anything looks a little off.\n(cid:56)\n(cid:52)\nFigure 2: PIQA covers a broad array of phenomena. Above are two categories of example QA pairs. Left are examples that require knowledge of basic properties of the objects (ﬂexibility, curvature, and being porous), while on the Right both answers may be technically correct but one is more convenient and preferable.\nbake, or manipulate objects using everyday materials. We asked annotators to provide semantic perturbations or alternative approaches which are otherwise syntactically and topically similar to ensure physical knowledge is targeted. The dataset is further cleaned of basic artifacts using the AFLite algorithm introduced in (Sakaguchi et al. 2020; Sap et al. 2019) which is an improvement on adversarial ﬁltering (Zellers et al. 2018; Zellers et al. 2019b).\nThroughout this work we ﬁrst detail the construction of our new benchmark for physical commonsense. Second, we show that popular approaches to large-scale language pretraining, while highly successful on many abstract tasks, fall short when a physical model of the world is required. Finally, our goal is to elicit further research into building language representations that capture details of the real world. To these ends, we perform error and corpora analyses to provide insights for future work.\nDataset\nWe introduce a new dataset, PIQA , for benchmarking progress in physical commonsense understanding. The underlying task is multiple choice question answering: given a question q and two possible solutions s1,s2, a model or a human must choose the most appropriate solution, of which exactly one is correct. We collect data with how-to instructions as a scaffold, and use state-of-the-art approaches for handling spurious biases, which we will discuss below.\nInstructables as a source of physical commonsense Our goal is to construct a resource that requires concrete physical reasoning. To achieve this, we provide a prompt to the annotators derived from instructables.com. The instructables website is a crowdsourced collection of instructions for doing everything from cooking to car repair. In most cases, users provide images or videos detailing each step and a list of tools that will be required. Most goals are simultaneously rare and unsurprising. While an annotator is unlikely to have built a UV-Flourescent steampunk lamp or\nmade a backpack out of duct tape, it is not surprising that someone interested in home crafting would create these, nor will the tools and materials be unfamiliar to the average person. Using these examples as the seed for their annotation, helps remind annotators about the less prototypical uses of everyday objects. Second, and equally important, is that instructions build on one another. This means that any QA pair inspired by an instructable is more likely to explicitly state assumptionsaboutwhatpreconditionsneedtobemettostart the task and what postconditions deﬁne success.\nCollecting data through goal-solution pairs\nUnlike traditional QA tasks, we deﬁne our dataset in terms of Goal and Solution pairs (see Figure 2 for example GoalSolution pairs and types of physical reasoning). The Goal in most cases can be viewed as indicating a post-condition and the solutions indicate the procedure for accomplishing this. The more detailed the goal, the easier it is for annotators to write both correct and incorrect solutions. As noted above, the second component of our annotation design is reminding people to think creatively. We initially experimented with asking annotators for (task, tool) pairs via unconstrained prompts, but found that reporting bias swamped the dataset. In particular, when thinking about how to achieve a goal, people most often are drawn to prototypical solutions and look for tools in the kitchen (e.g. forks and knives) or the garage (e.g. hammers and drills). They rarely considered the literal hundreds of other everyday objects that might be in their own homes (e.g. sidewalk chalk, shower curtains, etc). To address this, and ﬂatten the distribution of referenced objects (see Figure 5), we prompt the annotations with links to instructables. Speciﬁcally, annotators were asked to glance at the instructions of an instructable and pull out or have it inspire them to construct two component tasks. They would then articulate the goal (often centered on atypical materials) and how to achieve it. In addition, we asked them to provide a permutation to their own solution which makes it invalid, often subtly (Figure 3). To further assist diversity\nFigure 4: Sentence length distributions for both correct solutions and tricks are nearly identical across the training set.\nStatistics In total our dataset is comprised of over 16,000 training QA pairs with an additional ∼2K and ∼3k held out for development and testing, respectively. Our goals, as tokenized by Spacy,3 average 7.8 words and both correct and incorrect solutions average 21.3 words. In total, this leads to over 3.7 million lexical tokens in the training data.\nFigure 4 shows a plot of the correct and incorrect sequence lengths (as tokenized by the GPT BPE tokenizer), with the longest 1% of the data removed. While there are minor differences, the two distributions are nearly identical.\nWe also analyzed the overlap in the vocabulary and ﬁnd that in all cases (noun, verb, adjective, and adverb) we see at least an 85% overlap between words used in correct and incorrect solutions. In total we have 6,881 unique nouns, 2,493 verbs, 2,263 adjectives, and 604 adverbs in the training data.. The most common of each are plotted in Figure 5 alongside their cumulative distributions. Again, this helps verify that the dataset revolves very heavily around physical phenomena, properties, and manipulations. For example, the top adjectives include state (dry, clean, hot) and shape (small, sharp, ﬂat); adverbs include temporal conditions (then, when) and manner (quickly, carefully, completely). These properties often differentiate correct from incorrect answers, as shown in examples throughout the paper. We also color words according to their concreteness score (Brysbaert, Warriner, and Kuperman 2014), though many “abstract” words have concrete realizations in our dataset.\nRemoving Annotation Artifacts As noted previously, we use AFLite (Sakaguchi et al. 2020) to remove stylistic artifacts and trivial examples from the data, which have been shown to artiﬁcially inﬂate model performance on previous NLI benchmarks (Poliak et al. 2018; Gururangan et al. 2018). The AFLite algorithm performs a systematic data bias reduction: it discards instances whose given feature representations are collectively highly indicative of the target label. In practice, we use 5,000 examples from the original dataset to ﬁne-tune BERT-Large for this task and compute the corresponding embeddings of all remaining instances. AFLite uses an ensemble of linear classiﬁers trained on random subsets of the data to determine whether these pre-computed embeddings are strong\n3https://spacy.io – all data was collected in English.\nFigure 3: In the HIT design the instructable provides inspiration to think out-of-the-box (1 Sock, 3 Products) and annotators are asked for 1. a physical goal, 2. a valid solution, and 3. a trick. The trick should sound reasonable, but be wrong often due to a subtle misunderstanding of preconditions or physics. Additional HITs (not shown) were run for qualiﬁ- cation prior to this stage and validation afterwards.2\nwe seed annotators with instructables drawn from six categories (costume, outside, craft, home, food, and workshop). We asked that two examples be drawn per instructable to encourage one of them to come later in the process and require precise articulation of pre-conditions.\nDuring validation, examples with low agreement were removed from the data. This often meant that correct examples were removed that required expert level knowledge of a domain (e.g. special woodworking terminology) which should not fall under the umbrella of “commonsense.” Because, we focus on human generated tricks, annotators were free to come up with clever ways to hide deception. Often, this meant making very subtle changes to the solution to render it incorrect. In these cases, the two solutions may differ by as little as one word. We found that annotations used both simple linguistic tricks (e.g. negation and numerical changes) and often swapped a key action or item for another that was topically similar but not helpful for completing the given goal. For this reason, our interface also includes a diff button which highlights where the solutions differ. This improved annotator accuracy and speed substantially. Annotator pay averaged > 15$/hr according to both self-reporting on turkerview.com and our timing calculations.",
    "data_related_paragraphs": [
        "2In addition to this design, we also include a qualiﬁcation HIT which contained well constructed and underspeciﬁed (goal, solution) pairs. Annotators had to successfully (>80%) identify which werewellformedtoparticipateinthemainHIT.Datawascollected in batches of several thousand triples and validated by other annotators for correctness. Users will low agreement were de-qualed.",
        "indicators of the correct answer option. Instead of having to speciﬁcally identify the possible sources of biases, this approach enables unsupervised data bias reduction by relying on state-of-the-art methods to uncover undesirable annotation artifacts. For more information about AFLite, please refer to (Sakaguchi et al. 2020).",
        "Experiments In this section, we test the performance of state-of-theart natural language understanding models on our dataset, PIQA. In particular, we consider the following three largescale pretrained transformer models: a. GPT (Radford et al. 2018) is a model that processes text left-to-right, and was pretrained using a language modeling objective. We use the original 124M parameter GPT model. b. BERT (Devlin et al. 2019) is a model that process text bidirectionally, and thus was pretrained using a special masked language modeling objective. We use BERT-Large with 340M parameters. c. RoBERTa (Liu et al. 2019) is a version of the BERT model that was made to be signiﬁcantly more robust through pretraining on more data and careful validation of the pre-",
        "we used the transformers library and truncated examples at 150 tokens, which affects 1% of the data.",
        "Manual inspection of the development errors show that some “mistakes” are actually correct but required a websearch to verify. Human performance was calculated by a majority vote. Annotators were chosen to participate that achieved ≥90% on the qualiﬁcation HIT from before. It is therefore, completely reasonable that automated methods trained on large web crawls may eventually surpass human performance here. Human evaluation was performed on development data, and the train, development, and test folds were automatically produced by AFLite.",
        "Results We present our results in Table 1. As the dataset was constructed to be adversarial to BERT, it is not surprising that it performs the worst of three models despite generally outperforming GPT on most other benchmarks. Comparing GPT and RoBERTa we see that despite more training data, a larger vocabulary, twice the number of parameters and careful construction of robust training, there is only a 8pt performance gain and RoBERTa still falls roughly 18 points short ofhumanperformanceonthistask.Asnotedthroughout,exploring this gap is precisely the purpose for PIQA existing and which facets of the dataset fool RoBERTa is the focus of the remainder of this paper.",
        "PIQA as a diagnostic for physical understanding The setup of PIQA allows us to use it to probe the inner workings of deep pretrained language models, and to determine the extent of their physical knowledge. In this way, our dataset can augment prior work on studying to what extent models such as BERT understand syntax (Goldberg 2019). However, while syntax is a well studied problem within linguistics, physical commonsense does not have as rich a lit-",
        "Figure 6: Breaking down PIQA by edit distance between solution choices. Top: Cumulative histogram of examples in the validation and training sets, in terms of minimum edit distance d between the two solution choices. The majority of the dataset consists of small tweaks between the two solution pairs; nevertheless, this is enough to confuse state-ofthe-art NLP models. Bottom: RoBERTa accuracy over validation examples with a minimum edit distance of d. Dataset difﬁculty increases somewhat as the two solution pairs are allowed to drift further apart.",
        "Simple concepts. Understanding the physical world requires a deep understanding of simple concepts, such as “water” or “ketchup,” and their affordances and interactions with respect to other concepts. Though our dataset covers interactions between and with common objects, we can analyze the space of concepts in the dataset by performing a string alignment between solution pairs. Two solution choices that differ by editing a single phrase must by deﬁnition test the commonsense understanding of that phrase.",
        "In Figure 6 we show the distribution of the edit distance between solution choices. We compute edit distance over tokenized and lowercased strings with punctuation removed. We use a cost of 1 for edits, insertions, and deletions. Most of the dataset covers simple edits between the two solution choices: roughly 60% of the dataset in both validation and training involves a 1-2 word edit between solutions. In the bottom of Figure 6, we show that the dataset complexity",
        "020406080100% Examples with edit distance dSplitValidationTraining1020304050Minimum edit distance d between solution 1 and 25060708090100RoBERTa accuracy over examples d\fFigure 7: Common concepts as a window to RoBERTa’s understanding of the physical world. We consider validation examples (q,s1,s2) wherein s1 and s2 differ from each other by a given word w. Left, we show the validation accuracy for common words w, while the number of dataset examples are shown right. Though certain concepts such as water occur quite frequently, RoBERTa nevertheless ﬁnds those concepts difﬁcult, with 75% accuracy. Additionally, on common relations such as ‘cold’, ‘on’, ‘before’, and ‘after’ RoBERTa performs roughly at chance.",
        "Single-word edits. In Figure 7, we plot the accuracy of RoBERTa among dataset examples that differ by a single word. More formally, we consider examples (q,s1,s2) whereby moving from s1 to s2, or vice versa, requires editing a given word w.4 We show examples of words w that occur frequently in both the training and validation splits of the dataset, which allows RoBERTa to reﬁne representations of these concepts during training and gives us a large enough sample size to reliably estimate model performance.",
        "0255075100Validation accuracy over examples  that differ by the single word wwatertoppaperbottomafterbeforeglueoncoldspoondrymilkover0100200300# of dataset examples that differby the given single word wSplitValidationTraining0100200Countmilkoilsodavinegarflourolive oilalcoholbutterairotherMost common replacements for...water02040Countforkknifetoothpickspatulawhiskbowlscalpelshovelscrewdriverotherspoon0510Countboilheatcookmicrowavethawburneatrefrigerateheat upotherfreeze\fCorrect examples",
        "Language. Within NLP, in addition to large scale models, there has also been progress on reasoning about cause and effect effects/implications within these models (Bosselut et al. 2019), extracting knowledge from them (Petroni et al. 2019), and investigating where large scale language models fail to capture knowledge of tools and elided procedural knowledge in recipes (Bisk et al. 2019). The notion of procedural knowledge and instruction following is a more general related task within vision and robotics. From text alone, work has shown that much can be understood about the implied physical situations of verb usage (Forbes and Choi 2017) and relative sizes of objects (Elazar et al. 2019). Vision. Physical knowledge can be discovered and evaluated within the visual world. Research has studied predicting visual relationships in images (Krishna et al. 2016) and as well as actions and their dependent objects (Yatskar, the recent Zettlemoyer, and Farhadi 2016). Relatedly, HAKE dataset (Li et al. 2019) speciﬁcally annotates which object/body-parts are essential to completing or deﬁning an action. Image data also allows for studying the concreteness of nouns and provides a natural path forward for further investigation (Hessel, Mimno, and Lee 2018). Related to physical commonsense, research in visual commonsense",
        "We have evaluated against large-scale pretrained models as they are in vogue as the de facto standard of progress within NLP, but are primarily interested in their performance and failings as a mechanism for advancing the position that learning about the world from language alone, is limiting. Future research, may “match” humans on our dataset by ﬁnding a large source of in-domain data and ﬁne-tuning heavily, but this is very much not the point. Philosophically, knowledge should be learned from interaction with the world to eventually be communicated with language.",
        "References Agrawal, P.; Nair, A.; Abbeel, P.; Malik, J.; and Levine, S. 2016. Learning to poke by poking: Experiential learning of intuitive physics. In NeurIPS. Bisk, Y.; Buys, J.; Pichotta, K.; and Choi, Y. 2019. Benchmarking hierarchical script knowledge. In NAACL-HLT. Bosselut, A.; Rashkin, H.; Sap, M.; Malaviya, C.; Celikyilmaz, A.; and Choi, Y. 2019. COMET: Commonsense Transformers for Automatic Knowledge Graph Construction. In ACL. Brysbaert, M.; Warriner, A. B.; and Kuperman, V. 2014. Concreteness ratings for 40 thousand generally known english word lemmas. Behavior Research Methods (46):904– 911. Byravan, A.; Leeb, F.; Meier, F.; and Fox, D. 2018. Se3- pose-nets: Structured deep dynamics models for visuomotor planning and control. In ICRA. Devlin, J.; Chang, M.-W.; Lee, K.; and Toutanova, K. 2019. BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding. In NAACL-HLT. Elazar, Y.; Mahabal, A.; Ramachandran, D.; Bedrax-Weiss, T.; and Roth, D. 2019. How large are lions? inducing distributions over quantitative attributes. In ACL. Forbes, M., and Choi, Y. 2017. Verb physics: Relative physical knowledge of actions and objects. In ACL. Gao, Q.; Doering, M.; Yang, S.; and Chai, J. 2016. Physical causality of action verbs in grounded language understanding. In ACL, 1814–1824. Goldberg, Y. 2019. Assessing BERT’s Syntactic Abilities. arXiv:1901.05287. Gururangan, S.; Swayamdipta, S.; Levy, O.; Schwartz, R.; Bowman, S.; and Smith, N. A. 2018. Annotation artifacts in natural language inference data. In NAACL-HLT, 107–112. Hespos, S. J., and Spelke, E. S. 2004. Conceptual precursors to language. Nature 430:453–456. Hessel, J.; Mimno, D.; and Lee, L. 2018. Quantifying the visual concreteness of words and topics in multimodal datasets. In NAACL-HLT, 2194–2205. Krishna, R.; Zhu, Y.; Groth, O.; Johnson, J.; Hata, K.; Kravitz, J.; Chen, S.; Kalantidis, Y.; Li, L.-J.; Shamma, D. A.; Bernstein, M.; and Fei-Fei, L. 2016. Visual genome: Connecting language and vision using crowdsourced dense image annotations. In arXiv:1602.07332. Li, Y.-L.; Xu, L.; Huang, X.; Liu, X.; Ma, Z.; Chen, M.; Wang, S.; Fang, H.-S.; and Lu, C. 2019. Hake: Human activity knowledge engine. arXiv preprint arXiv:1904.06539.",
        "uation recognition: Visual semantic role labeling for image understanding. In CVPR. 2018. Zellers, R.; Bisk, Y.; Schwartz, R.; and Choi, Y. SWAG: A Large-Scale Adversarial Dataset for Grounded Commonsense Inference. In EMNLP. Zellers, R.; Bisk, Y.; Farhadi, A.; and Choi, Y. 2019a. From recognition to cognition: Visual commonsense reasoning. In CVPR. Zellers, R.; Holtzman, A.; Bisk, Y.; Farhadi, A.; and Choi, Y. 2019b. HellaSwag: Can a Machine Really Finish Your Sentence? In ACL."
    ]
}