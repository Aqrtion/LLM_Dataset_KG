{
    "title_author_abstract_introduction": "LVIS: A Dataset for Large Vocabulary Instance Segmentation\nAgrim Gupta\nPiotr Doll´ar Ross Girshick\nFacebook AI Research (FAIR)\nAbstract\nProgress on object detection is enabled by datasets that focus the research community’s attention on open challenges. This process led us from simple images to complex scenes and from bounding boxes to segmentation masks. In this work, we introduce LVIS (pronounced ‘el-vis’): a new dataset for Large Vocabulary Instance Segmentation. We plan to collect ∼2 million high-quality instance segmentation masks for over 1000 entry-level object categories in 164k images. Due to the Zipﬁan distribution of categories in natural images, LVIS naturally has a long tail of categorieswithfewtrainingsamples. Giventhatstate-of-the-art deep learning methods for object detection perform poorly in the low-sample regime, we believe that our dataset poses an important and exciting new scientiﬁc challenge. LVIS is available at http://www.lvisdataset.org.\n1. Introduction\nA central goal of computer vision is to endow algorithms with the ability to intelligently describe images. Object detection is a canonical image description task; it is intuitively appealing, useful in applications, and straightforward to benchmark in existing settings. The accuracy of object detectors has improved dramatically and new capabilities, such as predicting segmentation masks and 3D representations, have been developed. There are now exciting opportunities to push these methods towards new goals.\nToday, rigorous evaluation of general purpose object detectors is mostly performed in the few category regime (e.g. 80) or when there are a large number of training examples per category (e.g. 100 to 1000+). Thus, there is an opportunity to enable research in the natural setting where there are a large number of categories and per-category data is sometimesscarce. Thelongtailofrarecategoriesisinescapable; annotating more images simply uncovers previously unseen, rare categories (see Fig. 9 and [38, 33, 31, 35]). Efﬁciently learning from few examples is a signiﬁcant open problem in machine learning and computer vision, making this opportunity one of the most exciting from a scientiﬁc and practical perspective. But to open this area to empirical study, a suitable, high-quality dataset and benchmark is required.\nFigure 1. Example annotations. We present LVIS, a new dataset for benchmarking Large Vocabulary Instance Segmentation in the 1000+ category regime with a challenging long tail of rare objects.\nWe aim to enable this new research direction by designing and collecting LVIS (pronounced ‘el-vis’)—a benchmark dataset for research on Large Vocabulary Instance Segmentation. We are collecting instance segmentation masks for more than 1000 entry-level object categories (see Fig. 1). When completed, we plan for our dataset to contain 164k images and ∼2 million high-quality instance masks.1 Ourannotationpipelinestartsfromaset ofimagesthatwere collectedwithoutpriorknowledgeofthecategoriesthatwill be labeled in them. We engage annotators in an iterative object spotting process that uncovers the long tail of categories that naturally appears in the images and avoids using machine learning algorithms to automate data labeling.\nWedesigned acrowdsourcedannotationpipelinethat enables the collection of our large-scale dataset while also yielding high-quality segmentation masks. Quality is important for future research because relatively coarse masks, such as those in the COCO dataset [23], limit the ability to differentiate algorithm-predicted mask quality beyond a certain, coarse point. When compared to expert annotators, our segmentation masks have higher overlap and boundary\n1We plan to annotate the 164k images in COCO 2017 (we have permission to label test2017); ∼2M is a projection after labeling 85k images.\nconsistency than both COCO and ADE20K [37].\nTo build our dataset, we adopt an evaluation-ﬁrst design principle. This principle states that we should ﬁrst determine exactly how to perform quantitative evaluation and only then design and build a dataset collection pipeline to gather the data entailed by the evaluation. We select our benchmark task to be COCO-style instance segmentation and we use the same COCO-style average precision (AP) metric that averages over categories and different mask intersectionoverunion(IoU)thresholds[24]. Taskandmetric continuity with COCO reduces barriers to entry.\nBuried within this seemingly innocuous task choice are immediate technical challenges: How do we fairly evaluate detectors when one object can reasonably be labeled with multiple categories (see Fig. 2)? How do we make the annotation workload feasible when labeling 164k images with segmented objects from over 1000 categories?\nThe essential design choice resolving these challenges is to build a federated dataset: a single dataset that is formed by the union of a large number of smaller constituent datasets, each of which looks exactly like a traditional object detection dataset for a single category. Each small dataset provides the essential guarantee of exhaustive annotations for a single category—all instances of that category are annotated. Multiple constituent datasets may overlap and thus a single object within an image can be labeled with multiple categories. Furthermore, since the exhaustive annotation guarantee only holds within each small dataset, we do not require the entire federated dataset to be exhaustively annotated with all categories, which dramatically reduces the annotation workload. Crucially, at test time the membership of each image with respect to the constituent datasets is not known by the algorithm and thus it must make predictions as if all categories will be evaluated. The evaluation oracle evaluates each category fairly on its constituent dataset.\nIn the remainder of this paper, we summarize how our dataset and benchmark relate to prior work, provide details on the evaluation protocol, describe how we collected data, and then discuss results of the analysis of this data.\nDataset Timeline. We report detailed analysis on the 5000 image val subset that we have annotated twice. We have now annotated an additional 77k images (split between train, val, and test), representing ∼50% of the ﬁnal dataset; we refer to this as LVIS v0.5 (see §A for details). The ﬁrst LVIS Challenge, based on v0.5, will be held at the COCO Workshop at ICCV 2019.\n1.1. Related Datasets\nDatasets shape the technical problems researchers study and consequently the path of scientiﬁc discovery [21]. We owe much of our current success in image recognition to pioneering datasets such as MNIST [20], BSDS [26],\nFigure 2. Category relationships from left to right: non-disjoint category pairs may be in partially overlapping, parent-child, or equivalent (synonym) relationships, implying that a single object may have multiple valid labels. The fair evaluation of an object detector must take the issue of multiple valid labels into account.\nCaltech 101 [7], PASCAL VOC [6], ImageNet [30], and COCO [23]. These datasets enabled the development of algorithms that detect edges, perform large-scale image classiﬁcation, and localize objects by bounding boxes and segmentation masks. They were also used in the discovery of important ideas, such as Convolutional Networks [19, 17], Residual Networks [13], and Batch Normalization [15].\nLVIS is inspired by these and other related datasets, including those focused on street scenes (Cityscapes [4] and Mapillary [29]) and pedestrians (Caltech Pedestrians [5]). We review the most closely related datasets below.\nCOCO [23] is the most popular instance segmentation benchmark for common objects. It contains 80 categories that are pairwise distinct. There are a total of 118k training images, 5k validation images, and 41k test images. All 80 categories are exhaustively annotated in all images (ignoring annotation errors), leading to approximately 1.2 million instance segmentation masks. To establish continuity with COCO, we adopt the same instance segmentation task and AP metric, and we are also annotating all images from the COCO 2017 dataset. All 80 COCO categories can be mapped into our dataset. In addition to representing an order of magnitude more categories than COCO, our annotation pipeline leads to higher-quality segmentation masks that more closely follow object boundaries (see §4).\nADE20K [37] is an ambitious effort to annotate almost every pixel in 25k images with object instance, ‘stuff’, and part segmentations. The dataset includes approximately 3000 named objects, stuff regions, and parts. Notably, ADE20Kwasannotatedbyasingleexpertannotator, which increases consistency but also limits dataset size. Due to the relatively small number of annotated images, most of the categories do not have enough data to allow for both training and evaluation. Consequently, the instance segmentation benchmark associated with ADE20K evaluates algorithms on the 100 most frequent categories. In contrast, our goalistoenablebenchmarkingoflargevocabularyinstance segmentation methods.\niNaturalist [34] contains nearly 900k images annotated with bounding boxes for 5000 plant and animal species. Similar to our goals, iNaturalist emphasizes the importance\nToyDeerBackpack,RucksackVehicleCarTruck\fFigure 3. Example LVIS annotations (one category per image for clarity). See http://www.lvisdataset.org/explore.\nof benchmarking classiﬁcation and detection in the few example regime. Unlike our effort, iNaturalist does not include segmentation masks and is focussed on a different image and ﬁne-grained category distribution; our category distribution emphasizes entry-level categories.\nOpen Images v4 [18] is a large dataset of 1.9M images. The detection portion of the dataset includes 15M bounding boxes labeled with 600 object categories. The associated benchmark evaluates the 500 most frequent categories, all of which have over 100 training samples (>70% of them have over 1000 training samples). Thus, unlike our benchmark, low-shot learning is not integral to Open Images. Also different from our dataset is the use of machine learning algorithms to select which images will be annotated by using classiﬁers for the target categories. Our data collection process, in contrast, involves no machine learning algorithms and instead discovers the objects that appear within a given set of images. Starting with release v4, Open Images has used a federated dataset design for object detection.",
    "data_related_paragraphs": [
        "2. Dataset Design",
        "We followed an evaluation-ﬁrst design principle: prior to any data collection, we precisely deﬁned what task would be performed and how it would be evaluated. This principle isimportantbecausetherearetechnicalchallengesthatarise when evaluating detectors on a large vocabulary dataset that",
        "do not occur when there are few categories. These must be resolved ﬁrst, because they have profound implications for the structure of the dataset, as we discuss next.",
        "Task and Metric. Our dataset benchmark is the instance segmentation task: given a ﬁxed, known set of categories, design an algorithm that when presented with a previously unseen image will output a segmentation mask for each instance of each category that appears in the image along with the category label and a conﬁdence score. Given the output of an algorithm over a set of images, we compute mask average precision (AP) using the deﬁnition and implementation from the COCO dataset [24] (for more detail see §2.3). Evaluation Challenges. Datasets like PASCAL VOC and COCO use manually selected categories that are pairwise disjoint: when annotating a car, there’s never any question if the object is instead a potted plant or a sofa. When increasing the number of categories, it is inevitable that other typesofpairwiserelationshipswilloccur: (1)partiallyoverlapping visual concepts; (2) parent-child relationships; and (3) perfect synonyms. See Fig. 2 for examples.",
        "2.2. Federated Datasets",
        "Our key observation is that the desired evaluation protocol does not require us to exhaustively annotate all images with all categories. What is required instead is that for each category c there must exist two disjoint subsets of the entire dataset D for which the following guarantees hold:",
        "Given these two subsets for a category c, Pc ∪Nc can be used to perform standard COCO-style AP evaluation for c. The evaluation oracle only judges the algorithm on a categorycoverthesubsetofimagesinwhichchasbeenexhaustively annotated; if a detector reports a detection of category c on an image i /∈ Pc ∪ Nc, the detection is not evaluated. By collecting the per-category sets into a single dataset, D = ∪c(Pc ∪ Nc), we arrive at the concept of a federated dataset. A federated dataset is a dataset that is formed by the union of smaller constituent datasets, each of which looks exactly like a traditional object detection dataset for a single category. By not annotating all images with all categories, freedom is created to design an annotation process that avoids ambiguous cases and collects annotations only if there is sufﬁcient inter-annotator agreement. At the same time, the workload can be dramatically reduced.",
        "Reduced Workload. Federated dataset design allows us to make |Pc ∪ Nc| (cid:28) |D|,∀c. This choice dramatically re-",
        "Thechallengeevaluationserverwillonlyreturntheoverall AP, not per-category AP’s. We do this because: (1) it avoids leaking which categories are present in the test set;2 (2) given that tail categories are rare, there will be few examples for evaluation in some cases, which makes percategory AP unstable; (3) by averaging over a large number of categories, the overall category-averaged AP has lower variance, making it a robust metric for ranking algorithms. Non-Exhaustive Annotations. We also collect an imagelevel boolean label, ec i, indicating if image i ∈ Pc is exhaustively annotated for category c. In most cases (91%), this ﬂag is true, indicating that the annotations are indeed exhaustive. In the remaining cases, there is at least one instance in the image that is not annotated. Missing annotations often occur in ‘crowds’ where there are a large number of instances and delineating them is difﬁcult. During evaluation, we do not count false positives for category c on images i that have ec i set to false. We do measure recall on these images: the detector is expected to predict accurate segmentation masks for the labeled instances. Our strategy differs from other datasets that use a small maximum number of instances per image, per category (10-15) together with ‘crowd regions’ (COCO) or use a special ‘group of c’ label to represent 5 or more instances (Open Images v4). Our annotation pipeline (§3) attempts to collect segmentations for all instances in an image, regardless of count, and then checks if the labeling is in fact exhaustive. See Fig. 3. Hierarchy. During evaluation, we treat all categories the same; we do nothing special in the case of hierarchical relationships. To perform best, for each detected object o, the detector should output the most speciﬁc correct category as well as all more general categories, e.g., a canoe should be labeled both canoe and boat. The detected object o in image i will be evaluated with respect to all labeled positive categories {c | i ∈ Pc}, which may be any subset of categories between the most speciﬁc and the most general. Synonyms. A federated dataset that separates synonyms into different categories is valid, but is unnecessarily fragmented (see Fig. 2, right). We avoid splitting synonyms into separate categories with WordNet [28]. Speciﬁcally, in LVIS each category c is a WordNet synset—a word sense speciﬁed by a set of synonyms and a deﬁnition.",
        "3. Dataset Construction",
        "Object Spotting, Stage 1. The goals of the object spotting stage are to: (1) generate the positive set, Pc, for each category c ∈ V and (2) elicit vocabulary recall such that many different object categories are included in the dataset.",
        "Obvious and salient objects are spotted early in this iterative process. As an image is visited more, less obvious objects are spotted, including incidental, non-salient ones. We run the spotting stage twice, and for each image we retain categories that were spotted in both runs. Thus two people must independently agree on a name in order for it to be included in the dataset; this increases naming consistency. To summarize the output of stage 1: for each category in the vocabulary, we have a (possibly empty) set of images in which one object of that category is marked per image. This deﬁnes an initial positive set, Pc, for each category c.",
        "Exhaustive Instance Marking, Stage 2. The goals this stage are to: (1) verify stage 1 annotations and (2) take each image i ∈ Pc and mark all instances of c in i with a point. In this stage, (i,c) pairs from stage 1 are each sent to 5 annotators. They are asked to perform two steps. First, they are shown the deﬁnition of category c and asked to verify if it describes the spotted object. Second, if it matches, then the annotators are asked to mark all other instances of the same category. If it does not match, there is no second step. To prevent frequent categories from dominating the dataset and to reduce the overall workload, we subsample frequent categories such that no positive set exceeds more than 1% of the images in the dataset.",
        "Negative Sets, Stage 6. The ﬁnal stage of the pipeline is to collect a negative set Nc for each category c in the vocabulary. We do this by randomly sampling images i ∈ D \\ Pc, where D is all images in the dataset. For each sampled image i, we ask up to 5 annotators if category c appears in image i. If any one annotator reports that it does, we reject the image. Otherwise i is added to Nc. We sample until the negative set Nc reaches a target size of 1% of the images in the dataset. We use a gold set to maintain quality.",
        "Figure 5. Distribution of object centers in normalized image coordinates for four datasets. ADE20K exhibits the greatest spatial diversity, with LVIS achievinggreatercomplexitythanCOCOand the Open Images v4 training set.3",
        "4. Dataset Analysis",
        "Foranalysis, wehaveannotated5000images(theCOCO val2017 split) twice using the proposed pipeline. We begin by discussing general dataset statistics next before proceeding to an analysis of annotation consistency in §4.2 and an analysis of the evaluation protocol in §4.3.",
        "4.1. Dataset Statistics",
        "Category Statistics. There are 977 categories present in the 5000 LVIS images. The category growth rate (see Fig. 9) indicates that the ﬁnal dataset will have well over 1000 categories. On average, each image is annotated with 11.2 instances from 3.4 categories. The largest instancesper-image count is a remarkable 294. Fig. 6a shows the full categories-per-image distribution. LVIS’s distribution has more spread than COCO’s indicating that many images are labeled with more categories. The low-shot nature of our dataset can be seen in Fig. 6b, which plots the total number of instances for each category (in the 5000 images). The median value is 9, and while this number will be larger for the full image set, this statistic highlights the challenging long-tailed nature of our data. Spatial Statistics. Our object spotting process (stage 1) encourages the inclusion of objects distributed throughout the image plane, not just the most salient foreground objects. The effect can be seen in Fig. 5 which shows object-center density plots. All datasets have some degree of center bias, with ADE20K and LVIS having the most diverse spatial distribution. COCO and Open Images v4 (training set3) have similar object-center distributions with a marginally lower degree of spatial diversity. Scale Statistics. Objects in LVIS are also more likely to be small. Fig. 6c shows the relative size distribution of object masks: compared with COCO, LVIS objects tend to smaller and there are fewer large objects (e.g., objects that occupymostofanimageare ∼10×lessfrequent). ADE20K has the fewest large objects overall and more medium ones.",
        "(b) The number of instances per category (on 5k images) reveals the long tail with few examples. Orange dots: categories in common with COCO. Figure 6. Dataset statistics. Best viewed digitally.",
        "(a) LVIS segmentation quality measured by mask IoU between matched instances from two runs of our annotation pipeline. Masks from the runs are consistent with a dataset average IoU of 0.85.",
        "(b) LVIS recognition quality measured by F1 score given matched instances across two runs of our annotation pipeline. Category labeling is consistent with a dataset average F1 score of 0.87. Figure 7. Annotation consistency using 5000 doubly annotated images from LVIS. Best viewed digitally.",
        "(c) Illustration of mask IoU vs. boundary quality to provide intuition for interpreting Fig. 7a (left) and Tab. 1a (dataset annotations vs. expert annotators, below).",
        "dataset",
        "comparison dataset vs. experts expert1 vs. expert2 dataset vs. experts expert1 vs. expert2 dataset vs. experts expert1 vs. expert2",
        "dataset",
        "annotation source dataset experts dataset experts dataset experts",
        "Annotation Pipeline Repeatability. A repeatable annotation pipeline implies that the process generating the groundtruth data is not overly random and therefore may be learned. To understand repeatability, we annotated the 5000 images twice: after completing object spotting (stage 1), we have initial positive sets Pc for each category c; we then execute stages 2 through 5 (exhaustive instance marking through full recall veriﬁcation) twice in order to yield doubly annotated positive sets. To compare them, we compute a matching between them for each image and category pair. We ﬁnd a matching that maximizes the total mask intersection over union (IoU) summed over the matched pairs and then discard any matches with IoU < 0.5. Given these matches we compute the dataset average mask IoU (0.85) and the dataset average F1 score (0.87). Intuitively, these quantities describe ‘segmentation quality’ and ‘recognition quality’ [16]. The cumulative distributions of these metrics (Fig. 7a and 7b) show that even though matches are estab-",
        "Comparison with Expert Annotators. To measure segmentation quality, we randomly selected 100 instances with mask area greater than 322 pixels from LVIS, COCO, and ADE20K. We presented these instances (indicated by bounding box and category) to two independent expert annotators and asked them to segment each object using professional image editing tools. We compare dataset annotations to expert annotations using mask IoU and boundary quality (boundary F [26]) in Tab. 1a. The results (bootstrapped 95% conﬁdence intervals) show that our masks are high-quality, surpassing COCO and ADE20K on both measures (see Fig. 7c for intuition). At the same time, the objects in LVIS have more complex boundaries [1] (Tab. 1b).",
        "Figure 8. Analysis of AP as a function of different data sizes. Best viewed digitally.",
        "COCO Detectors on LVIS. To validate our annotations and federated dataset design we downloaded three Mask RCNN [12] models from the Detectron Model Zoo [8] and evaluated them on LVIS annotations for the categories in COCO. Tab. 2 shows that both box AP and mask AP are close between our annotations and the original ones from COCO for all models, which span a wide AP range. This result validates our annotations and evaluation protocol: even though LVIS usesafederateddatasetdesignwithsparseannotations, the quantitative outcome closely reproduces the ‘gold standard’ results from dense COCO annotations.",
        "Federated Dataset Simulations. For insight into how AP changes with positive and negative sets sizes |Pc| and |Nc|, werandomlysamplesmallerevaluationsets(20times)from COCO val2017 and recompute AP. In Fig. 8a we use all positive instances for evaluation, but vary |Nc| between 50 and 5k. AP decreases somewhat (∼2% absolute) as we increase the number of negative images as the ratio of negative to positive examples grows with ﬁxed |Pc| and increasing |Nc|. Next, in Fig. 8b we set |Nc| = 50 and vary |Pc|. We observe that even with a small positive set size of 80, AP is similar to the baseline with low variance. With smaller positive sets (down to 5) variance increases, but the AP gap from 1st to 3rd quartile remains below 2% absolute. A curious upward bias in AP appears, which we investigate in §C.2. These simulations together with COCO detectors tested on LVIS (Tab. 2) indicate that including smaller evaluation sets for each category is viable for evaluation.",
        "ing from 1k to 118k images. For each subset, we optimized the learning rate schedule and weight decay by grid search. Results on val2017 are shown in Fig. 8c. At 1k images, mask AP drops from 36.4% (full dataset) to 9.8% (1k subset). In the 1k subset, 89% of the categories have more than 20 training instances, while the low-shot literature typically considers (cid:28) 20 examples per category [10]. Low-ShotCategoryStatistics. Fig.9(left)showscategory growth as a function of image count (up to 977 categories in 5k images). Extrapolating the trajectory, our ﬁnal dataset will include over 1k categories (upper bounded by the vocabulary size, 1723). Since the number of categories increases during data collection, the low-shot nature of LVIS is somewhat independent of the dataset scale, see Fig. 9 (right) where we bin categories based on how many images they appear in: rare (1-10 images), common (11-100), and frequent (>100). These bins, as measured w.r.t. the training set, will be used to present disaggregated AP metrics.",
        "We introduced LVIS, a new dataset designed to enable, for the ﬁrst time, the rigorous study of instance segmentation algorithms that can recognize a large vocabulary of object categories (>1000) and must do so using methods that cancopewiththeopenproblemoflow-shotlearning. While LVIS emphasizes learning from few examples, the dataset is not small: it will span 164k images and label ∼2 million object instances. Each object instance is segmented with a high-quality mask that surpasses the annotation quality of related datasets. We plan to establish LVIS as a benchmark challenge that we hope will lead to exciting new object detection, segmentation, and low-shot learning algorithms.",
        "LVIS release v0.5 marks the halfway point in data collection. For this release, we have annotated an additional 77k images (57k train, 20k test) beyond the 5k val images that we analyzed in the previous sections, for a total of 82k annotated images. Release v0.5 is publicly available at https://www.lvisdataset.org and will be used in the ﬁrst LVIS Challenge to be held in conjunction with the COCO Workshop at ICCV 2019. Collection Details. We collected the v0.5 data in two 38.5k image batches using the process described in the main text. Each batch contained a proportional mix of train and test images. After collection was completed for the ﬁrst batch, we manually checked all 1415 categories that were represented in the data collection and cast an include vs. exclude vote for each category based on its visual consistency. This process led to the removal of ∼18% of categories and ∼10% of labeled instances. After collecting the second batch, we repeated this process for 83 categories that were newly introduced. After we ﬁnish the full data collection for v1 (estimated early 2020), we will conduct another similar quality control pass on a subset of the categories.",
        "LVIS val v0.5 is the same as the set used for analysis in the main text, except that we removed any categories that: (1) were determined to be visually inconsistent in the quality control pass or (2) had zero instances in the training set. In this section, we refer to the annotations used for analysis in the main text as ‘LVIS val (unpruned)’. Dataset Statistics. After our quality control pass, the ﬁnal category count for release v0.5 is 1230. The number of categories in the val set decreased from 977 to 830, due to quality control, and it now has 51k segmented object instances. Thetrainv0.5sethas694ksegmentedinstances. We next repeat some of the key analysis plots, this time showing the ﬁnal val and train v0.5 sets compared to the original (unpruned) val set from the main text. The train and test sets are collected using an identical process (the train and test images were originally sampled from the same image distribution and are mixed together in each annotation batch) and therefore the training data is statistically identical to that of the test data.",
        "only modest growth while collecting the second half of the dataset, perhaps expanding by ∼100 additional categories. Next, we extend Fig. 9 (right) from 5k images to 57k images using the train v0.5 data, as shown in Fig. 10 (right). Due to the slowing category growth, the percent of rare categories(thoseappearingin1-10trainingimages)isdecreasing, but remains a sizeable portion of the dataset. Roughly 75% of categories appear in 100 training images or less, highlighting the challenging low-shot nature of the dataset. Finally, we look at the spatial distribution of object centers in Fig. 11. This visualization veriﬁes that quality control did not lead to a meaningful bias in this statistic. The train and val sets exhibit visually similar distributions. Based on this analysis and our qualitative judgement when performing per-category quality control, we conclude that our data collection process scales well beyond the initial 5k set analyzed in the main text.",
        "To help researchers calibrate their results for the upcoming LVIS Challenge at ICCV 2019,4 we introduce simple In §B.1, we test the performance of Mask Rbaselines. CNN [12] out-of-the-box, and show the importance of adjusting two inference-time hyper-parameters. Next in §B.2 we provide an improved (yet standard) baseline that resamples the training data in order to increase the frequency of rare categories. Finally in §B.3 we train larger models.",
        "4https://www.lvisdataset.org/challenge 5We use SGD with 0.9 momentum and 16 images per minibatch; the training schedule is 60k/20k/10k updates at learning rates of 0.02/0.002/0.0002 respectively (this 90k update schedule is equivalent to ∼25 epochs over train v0.5); we use a linear learning rate warmup [9] over 1000 updates starting from a learning rate of 0.001; weight decay 0.0001 is applied; horizontal ﬂipping is the only train-time data augmentation unless otherwise stated; training and inference images are resized to a shorter image edge of 800 pixels; no test-time augmentation is used.",
        "(c) Mask R-CNN enhancements. We apply scale jitter data augmentation and upgrade the backbone to larger models [36]. This improves all AP metrics although APr does not improve with the largest backbone.",
        "B.2. Mask R-CNN with Data Resampling",
        "Resampling training data is a common strategy for training models on class imbalanced datasets [32, 11, 25, 27]. We apply a method that was used to train large-scale hashtag prediction models in [25] (inspired by [27]). The method, which we refer to as repeat factor sampling, increases the rate at which tail categories are observed by oversampling the images that contain them.",
        "The method is implemented as follows. For each category c, let fc be the fraction of training images that contain at least one instance of c. Deﬁne the category-level repeat factor as rc = max(1,(cid:112)t/fc), where t is a hyperparameter. Since each image may contain multiple categories, we deﬁne an image-level repeat factor. Speciﬁcally, for each image i, we set ri = maxc∈i rc, where {c ∈ i} are the categories labeled in i. In each epoch, the SGD data sampler creates a random permutation of images in which each image is repeated according to its repeat factor ri.",
        "We also present results using class aware sampling (CAS), a popular method on imbalanced classiﬁcation datasets (e.g., [32]). In CAS, the data sampler ﬁrst selects a category and then an image containing that category. Consistent with repeat factor sampling and SGD bestpractices [2], we iterate over random permutations of categories and within each category random permutations of their images. CAS improves APr over the baseline as expected (from 3.2% to 8.5%), however both APc and APf decrease leading to a worse overall result.",
        "Suppose we have a small evaluation set (e.g., val, 5k images) and a large evaluation set (e.g., test, 20k images) that are both random samples from the same population. One might expect that while the categories present in the sets are different, the per-category AP for a given category computed on evaluation sets of different sizes should be unbiased estimates of the true AP and only the variance of the estimate should change. Surprisingly, in general this intuition is not true and the estimate can be biased for smaller evaluation set sizes. We ﬁrst observed this bias in Fig. 8b, in which we see that AP increases on average as the number of positive images per category (|Pc|) decreases. We now analyze this bias further in both simulated6 and real data.",
        "Now moving from the simulated classiﬁcation problem to real object detection data, we show APbb@75 of a trained detector for three categories evaluated on random COCO val2017 subsets of various sizes in Fig. 13b. The toaster category is one of the two rarer categories in COCO while cats and and dining table appear more frequently. In each case we observe similar trends as in the earlier simulations. Most categories in COCO are well-sampled like the cat and dining table categories and their AP has already converged on the 5k val2017 set. Therefore overall AP does not vary much on COCO when comparing val2017 to test2017 results.",
        "0100002000030000400005000060000Subset size (images)050100Percent of categoriesval v0.5test v0.5train v0.515.6%47.6%36.8%29.5%41.9%28.6%36.9%37.5%25.6%rarecommonfrequent\f(a) AP of simulated classiﬁers as a function of the evaluation set size and the fraction of positive examples fc (the number below each data point indicates the number of positives at that point, the shaded region indicates the standard error when averaged over 300 trials). The left plot shows the behavior of a random Gaussian classiﬁer; the right shows a classiﬁer that mimics the empirical score distribution of a trained classiﬁer. While smaller fc leads to decreased AP, we also observe a consistent decrease in AP as the evaluation set size increases (until convergence).",
        "In existing class-balanced detection datasets, researchers have grown accustomed to AP transferring nearly perfectly between small validation sets (e.g., 5k images) and larger test sets (20k images). In this section we demonstrated that when a dataset has a larger class imbalance there are at least two factors that cause AP estimated on smaller evaluation sets to be biased compared to larger evaluation sets. Empirically, this bias leads to higher AP on val v0.5 than on test v0.5. While a small validation set was unavoidable for LVIS v0.5, based on this analysis we may extend the validation set to include more images in release v1.",
        "[4] Marius Cordts, Mohamed Omran, Sebastian Ramos, Timo Rehfeld, Markus Enzweiler, Rodrigo Benenson, Uwe Franke, Stefan Roth, and Bernt Schiele. The Cityscapes dataset for semantic urban scene understanding. In CVPR, 2016. 2",
        "[11] Haibo He and Edwardo A Garcia. Learning from imbalanced IEEE Transactions on knowledge and data engineering,",
        "data. 2009. 10",
        "[18] Alina Kuznetsova, Hassan Rom, Neil Alldrin, Jasper Uijlings, Ivan Krasin, Jordi Pont-Tuset, Shahab Kamali, Stefan Popov, Matteo Malloci, Tom Duerig, et al. The open images dataset v4: Uniﬁed image classiﬁcation, object detection, and visual relationship detection at scale. arXiv preprint arXiv:1811.00982, 2018. 3",
        "[20] Yann LeCun, Corinna Cortes, and Christopher J.C. Burges. The MNIST database of handwritten digits. http://yann. lecun.com/exdb/mnist/, 1998. 2",
        "[24] Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays, Pietro Perona, Deva Ramanan, Piotr Doll´ar, and C Lawrence Zitnick. COCO detection evaluation. http://cocodataset. org/#detection-eval, Accessed Oct 30, 2018. 2, 3 [25] Dhruv Mahajan, Ross Girshick, Vignesh Ramanathan, Kaiming He, Manohar Paluri, Yixuan Li, Ashwin Bharambe, and Laurens van der Maaten. Exploring the limits of weakly supervised pretraining. In ECCV, 2018. 10",
        "[26] David Martin, Charless Fowlkes, Doron Tal, and Jitendra Malik. A database of human segmented natural images and its application to evaluating segmentation algorithms and measuring ecological statistics. In ICCV, 2001. 2, 7",
        "[28] George Miller. WordNet: An electronic lexical database. MIT",
        "[29] Gerhard Neuhold, Tobias Ollmann, Samuel Rota Bul`o, and Peter Kontschieder. The mapillary vistas dataset for semantic understanding of street scenes. In ICCV, 2017. 2",
        "[31] Bryan C Russell, Antonio Torralba, Kevin P Murphy, and William T Freeman. Labelme: a database and web-based tool for image annotation. IJCV, 2008. 1",
        "[33] MerrielleSpainandPietroPerona. Measuringandpredictingimportance of objects in our visual world. Technical Report CNSTR-2007-002, California Institute of Technology, 2007. 1 [34] Grant Van Horn, Oisin Mac Aodha, Yang Song, Yin Cui, Chen Sun, Alex Shepard, Hartwig Adam, Pietro Perona, and Serge Belongie. The iNaturalist species classiﬁcation and detection dataset. In CVPR, 2018. 2",
        "[35] Jianxiong Xiao, James Hays, Krista A Ehinger, Aude Oliva, and Antonio Torralba. SUN database: Large-scale scene recognition from abbey to zoo. In CVPR, 2010. 1",
        "[37] Bolei Zhou, Hang Zhao, Xavier Puig, Sanja Fidler, Adela Barriuso, and Antonio Torralba. Semantic understanding of scenes through the ADE20K dataset. IJCV, 2019. 2"
    ]
}